#!/bin/bash

# Script to extract Pikachu's name, height, weight, and type from data.json and format output

# Define constants
INPUT_FILE="data.json"
ERROR_FILE="errors.txt"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

# Check if jq is installed
if ! command -v jq &> /dev/null; then
    echo "$TIMESTAMP: Error: jq is not installed." >> "$ERROR_FILE"
    exit 1
fi

# Check if awk is installed
if ! command -v awk &> /dev/null; then
    echo "$TIMESTAMP: Error: awk is not installed." >> "$ERROR_FILE"
    exit 1
fi

# Check if sed is installed
if ! command -v sed &> /dev/null; then
    echo "$TIMESTAMP: Error: sed is not installed." >> "$ERROR_FILE"
    exit 1
fi

# Check if data.json exists
if [ ! -f "$INPUT_FILE" ]; then
    echo "$TIMESTAMP: Error: $INPUT_FILE does not exist." >> "$ERROR_FILE"
    exit 1
fi

# Extract data using jq
# -r: raw output, types[0].type.name for primary type
data=$(jq -r '[.name, .height, .weight, .types[0].type.name] | @tsv' "$INPUT_FILE" 2>> "$ERROR_FILE")
jq_exit_code=$?

# Check if jq parsing succeeded
if [ $jq_exit_code -ne 0 ]; then
    echo "$TIMESTAMP: Error: Failed to parse $INPUT_FILE with jq." >> "$ERROR_FILE"
    exit 1
fi

# Process data with awk: convert units and format output
# Height: decimeters to meters (divide by 10), Weight: hectograms to kg (divide by 10)
# Capitalize name and type using toupper
output=$(echo "$data" | awk -F'\t' '{
    name=toupper(substr($1,1,1)) substr($1,2);
    height=$2/10;
    weight=$3/10;
    type=toupper(substr($4,1,1)) substr($4,2);
    printf "%s is of type %s, weighs %gkg, and is %gm tall.", name, type, weight, height
}')

# Polish output with sed: ensure single spaces and proper punctuation
final_output=$(echo "$output" | sed 's/  */ /g; s/\.$/./')

# Print the final output
echo "$final_output"