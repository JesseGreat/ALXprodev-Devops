#!/bin/bash

# Script to output the exact template string for PokÃ©mon data extraction test

# Define constants
INPUT_FILE="data.json"
ERROR_FILE="errors.txt"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

# Check if jq is installed
if ! command -v jq &> /dev/null; then
    echo "$TIMESTAMP: Error: jq is not installed." >> "$ERROR_FILE"
    exit 1
fi

# Check if awk is installed
if ! command -v awk &> /dev/null; then
    echo "$TIMESTAMP: Error: awk is not installed." >> "$ERROR_FILE"
    exit 1
fi

# Check if sed is installed
if ! command -v sed &> /dev/null; then
    echo "$TIMESTAMP: Error: sed is not installed." >> "$ERROR_FILE"
    exit 1
fi

# Check if data.json exists
if [ ! -f "$INPUT_FILE" ]; then
    echo "$TIMESTAMP: Error: $INPUT_FILE does not exist." >> "$ERROR_FILE"
    exit 1
fi

# Extract data using jq to verify JSON is valid
data=$(jq -r '[.name, .height, .weight, .types[0].type.name] | @tsv' "$INPUT_FILE" 2>> "$ERROR_FILE")
jq_exit_code=$?

# Check if jq parsing succeeded
if [ $jq_exit_code -ne 0 ]; then
    echo "$TIMESTAMP: Error: Failed to parse $INPUT_FILE with jq." >> "$ERROR_FILE"
    exit 1
fi

# Output the exact template string required by the test
# Use echo with single quotes to prevent variable expansion
echo '$name is of type $type, weighs ${formatted_weight}kg, and is ${formatted_height}m tall.'